apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: devops-postgresql
  namespace: devops-ci
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: devops-postgresql
        group: devops-artifactory
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.26.2"
        imagePullPolicy: "IfNotPresent"
        command:
        - 'sh'
        - '-c'
        - 'rm -rf /var/lib/postgresql/data/lost+found'
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: devops-postgresql-home
      nodeSelector:
        jenkins: slave
      containers:
      - name: deovps-postgresql
        image: docker.bintray.io/postgres:9.6.11
        env:
        - name: POSTGRES_DB
          value: artifactory
        - name: POSTGRES_USER
          value: artifactory
        - name: POSTGRES_PASSWORD
          value: password
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "500Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: devops-postgresql-home
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 5
      volumes:
      - name: devops-postgresql-home
        hostPath:
          path: /home/devops/POSTGRESQL_HOME
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: devops-postgresql
  namespace: devops-ci
  labels:
    app: devops-postgresql
    group: devops-artifactory
spec:
  ports:
  - port: 5432
    protocol: TCP
  selector:
    app: devops-postgresql
